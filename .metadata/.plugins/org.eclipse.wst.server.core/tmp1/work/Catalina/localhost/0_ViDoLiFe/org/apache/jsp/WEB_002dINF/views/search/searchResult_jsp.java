/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.54
 * Generated at: 2021-11-28 14:27:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.search;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import search.model.vo.Search;
import java.util.ArrayList;

public final class searchResult_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("search.model.vo.Search");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

	
	ArrayList<Search> list = (ArrayList<Search>)request.getAttribute("list");       //검색 내용으로 작품검색
	ArrayList<Search> greList = (ArrayList<Search>)request.getAttribute("greList");	//검색내용의  장르로 작품검색
	//String keyserch = (String)request.getAttribute("search");
	

      out.write("\r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("@import url('https://fonts.googleapis.com/css2?family=Jua&display=swap');\r\n");
      out.write("	\r\n");
      out.write("	body{\r\n");
      out.write("		background: ghostwhite;\r\n");
      out.write("		margin-left: 10%;\r\n");
      out.write("		margin-right: 10%;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	header{\r\n");
      out.write("		font-family: 'Jua', sans-serif;\r\n");
      out.write("	}\r\n");
      out.write("	#logo {width: 200px;}\r\n");
      out.write("	#login {text-align: right; font-size: 8px;}\r\n");
      out.write("	\r\n");
      out.write("	#searchText {\r\n");
      out.write("		text-align: right;\r\n");
      out.write("		margin-top: 10px;\r\n");
      out.write("		margin-bottom: 10px;\r\n");
      out.write("		padding: 0px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	#searchWord {\r\n");
      out.write("		border: 1px solid #00CED1;\r\n");
      out.write("		font-size: 15px;\r\n");
      out.write("		width: 300px;\r\n");
      out.write("		height: 30px;\r\n");
      out.write("	}\r\n");
      out.write("	#input {\r\n");
      out.write("		border: none;\r\n");
      out.write("		background: #00CED1;\r\n");
      out.write("		vertical-align: middle;\r\n");
      out.write("		font-family: 'Jua', sans-serif;\r\n");
      out.write("		width: 50px;\r\n");
      out.write("		height: 35px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	#topMenu {\r\n");
      out.write("		height: 30px;\r\n");
      out.write("		width: 100%;\r\n");
      out.write("		margin: 0px;\r\n");
      out.write("		padding: 0px;\r\n");
      out.write("	}\r\n");
      out.write("	#topMenu ul {\r\n");
      out.write("		margin: 0px;\r\n");
      out.write("		padding: 0px;\r\n");
      out.write("	}\r\n");
      out.write("	#topMenu ul li {\r\n");
      out.write("		list-style: none;\r\n");
      out.write("		color: white;\r\n");
      out.write("		float: left;\r\n");
      out.write("		line-height: 30px;\r\n");
      out.write("		vertical-align: middle;\r\n");
      out.write("		text-align: center;\r\n");
      out.write("	}\r\n");
      out.write("	#topMenu .menuLink {\r\n");
      out.write("		text-decoration: none;\r\n");
      out.write("		color: black;\r\n");
      out.write("		display: block;\r\n");
      out.write("		font-size: 15px;\r\n");
      out.write("		font-weight: bold;\r\n");
      out.write("	}\r\n");
      out.write("	#topMenu ul li:hover {background-color: ghostwhite;}\r\n");
      out.write("	\r\n");
      out.write("	#search {background: #AFEEEE; width: 20%;}\r\n");
      out.write("	#review {background: #7FFFD4; width: 20%;}\r\n");
      out.write("	#allview {background: #40E0D0; width: 20%;}\r\n");
      out.write("	#allbuy {background: #48D1CC; width: 20%;}\r\n");
      out.write("	#notice {background: #00CED1; width: 20%;}\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	#inblock{\r\n");
      out.write("		   width: 70%; height: 100px;\r\n");
      out.write("		   background-color: green;\r\n");
      out.write("		   }\r\n");
      out.write("		   \r\n");
      out.write("		   \r\n");
      out.write("	.main{ width: 100%; height: 700px;  margin:0 auto;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("	.main1{	font-family: 'Jua', sans-serif;\r\n");
      out.write("			background-color: #AFEEEE; font-size: 20px;\r\n");
      out.write("			width: 90%; height:40px;\r\n");
      out.write("			 margin-left: 30px;\r\n");
      out.write("			 margin-bottom: 20px;\r\n");
      out.write("			 padding-top: 10px;\r\n");
      out.write("			 padding-left: 20px;\r\n");
      out.write("	}\r\n");
      out.write("	.main2{ font-family: 'Jua', sans-serif;\r\n");
      out.write("			background-color: #AFEEEE; font-size: 20px;\r\n");
      out.write("			width: 90%; height:40px;\r\n");
      out.write("			 margin-left: 30px;\r\n");
      out.write("			 margin-bottom: 20px;\r\n");
      out.write("			 padding-top: 10px;\r\n");
      out.write("			 padding-left: 20px;\r\n");
      out.write("	}\r\n");
      out.write("			\r\n");
      out.write("	 .main1_box{ board: 1px solid black;\r\n");
      out.write("	 			width: 50%;\r\n");
      out.write("  				height: 30%;\r\n");
      out.write("  				text-align: center;\r\n");
      out.write("  			 	 margin-right: 60px;\r\n");
      out.write("  			 	margin: 0 auto;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.main2_box{ board: 1px solid black;\r\n");
      out.write("				width: 50%;\r\n");
      out.write("  				height: 30%;\r\n");
      out.write("  				text-align: center;\r\n");
      out.write("  				margin-right: 60px;\r\n");
      out.write("  				margin: 0 auto;}\r\n");
      out.write("  	  \r\n");
      out.write("  	  .image{ width: 170px;\r\n");
      out.write("  			height: 220px;\r\n");
      out.write("  			 margin-right: 10px;			 \r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	#resultEmp{ font-family: 'Jua', sans-serif;\r\n");
      out.write("				font-size: 30px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("	<header>\r\n");
      out.write("		<div id=\"login\">회원가입 / 로그인</div>\r\n");
      out.write("		<div>\r\n");
      out.write("			<a href=\"D:\\semi-Project\\semi-Project\\WebContent\\index.html\"><img id=\"logo\" src=\"images/비도라이프시안.png\"></a>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div id=\"searchText\">\r\n");
      out.write("			<input type=\"text\" id=\"searchWord\"><button id=\"input\">검색</button>\r\n");
      out.write("		</div>\r\n");
      out.write("		<nav id=\"topMenu\">\r\n");
      out.write("			<ul>\r\n");
      out.write("				<li id=\"search\"><a class=\"menuLink\" onclick=\"location.href='");
      out.print( request.getContextPath() );
      out.write("/search.ch'\">상세검색</a></li>\r\n");
      out.write("				<li id=\"review\"><a class=\"menuLink\" href=\"");
      out.print( request.getContextPath() );
      out.write("/list.re\">리뷰 게시판</a></li>\r\n");
      out.write("				<li id=\"allview\"><a class=\"menuLink\" href=\"");
      out.print( request.getContextPath() );
      out.write("/list.jo\">단체관람 게시판</a></li>\r\n");
      out.write("				<li id=\"allbuy\"><a class=\"menuLink\" href=\"");
      out.print( request.getContextPath() );
      out.write("/list.bu\">공동구매 게시판</a></li>\r\n");
      out.write("				<li id=\"notice\"><a class=\"menuLink\" href=\"#\">공지사항</a></li>\r\n");
      out.write("			</ul>\r\n");
      out.write("		</nav>\r\n");
      out.write("	</header>\r\n");
      out.write("	\r\n");
      out.write("	<br>\r\n");
      out.write("\r\n");
      out.write("	<div class=\"main\">\r\n");
      out.write("		<br><br>\r\n");
      out.write("		<br>\r\n");
      out.write("		\r\n");
      out.write("		<div class=\"main1\">");
      out.print( request.getParameter("search") );
      out.write(" 관련 작품</div>\r\n");
      out.write("		<div class=\"main1_box\">\r\n");
      out.write("			");
 if(list.isEmpty()){ 
      out.write("\r\n");
      out.write("				<div id=\"resultEmp\">검색 결과가 없습니다.</div>\r\n");
      out.write("				");
 } else{ 
      out.write("\r\n");
      out.write("					");
 for(int i = 0; i < 1; i++){ 
      out.write("						\r\n");
      out.write("						");
 Search s = list.get(i); 
      out.write("	\r\n");
      out.write("							<a href='");
      out.print(request.getContextPath());
      out.write("/SerchInfoForm.do?conNo=");
      out.print(s.getConNo());
      out.write("'>\r\n");
      out.write("							<img id=\"image\" class=\"image\" src=\"images/");
      out.print( s.getConPicNewName() );
      out.write("\" ></a>\r\n");
      out.write("							<input type=\"hidden\" id=\"imgConNo\" value=\"");
      out.print( s.getConNo() );
      out.write("\">											\r\n");
      out.write("							");
 } 
      out.write("\r\n");
      out.write("					");
 } 
      out.write("		\r\n");
      out.write("			</div><br><br>\r\n");
      out.write("			\r\n");
      out.write("		<div class=\"main2\">");
      out.print(request.getParameter("search") );
      out.write(" 관련 추천 작품</div>\r\n");
      out.write("			<div class=\"main2_box\">\r\n");
      out.write("				");
 if(greList.isEmpty()){ 
      out.write("\r\n");
      out.write("					<div id=\"resultEmp\">검색 결과가 없습니다.</div>\r\n");
      out.write("				");
 } else{ 
      out.write("\r\n");
      out.write("					");
 for(int i = 0; i < 5; i++){ 
      out.write("											\r\n");
      out.write("						");
 Search gs = greList.get(i); 
      out.write("\r\n");
      out.write("							<a href='");
      out.print(request.getContextPath());
      out.write("/SerchInfoForm.do?conNo=");
      out.print(gs.getConNo());
      out.write("'>\r\n");
      out.write("							<img id=\"image\" class=\"image\" src=\"images/");
      out.print( gs.getConPicNewName() );
      out.write("\" ></a>\r\n");
      out.write("							<input type=\"hidden\" id=\"imgConNo\" value=\"");
      out.print( gs.getConNo() );
      out.write("\">\r\n");
      out.write("						");
 } 
      out.write("\r\n");
      out.write("					");
 } 
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
